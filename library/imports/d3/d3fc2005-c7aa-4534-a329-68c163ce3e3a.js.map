{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\WX.js"],"names":["WX","isWX","cc","sys","browserType","BROWSER_TYPE_WECHAT_GAME","CONFIG","cloudDB","hadInid","rewardedVideoAd","isVideoAvalible","login","callback","console","log","wx","onShareAppMessage","title","imageUrl","self","cloud","init","env","DB","database","COLLECTION","collection","add","data","description","date","Date","getTime","tags","success","res","getUserData","where","_openid","openid","get","length","bestScore","loginDays","personCode","playTime","shareTimes","totalScore","fail","error","DOC","doc","_id","updateThisPlay","playData","_","command","update","inc","thisPlayTime","score","saveRankData","openData","key","value","String","setUserCloudStorage","KVDataList","share","shareAppMessage","getShareTitle","getShareImgUrl","showToast","icon","addShareTimes","watchVideoAD","isVideoAvailable","show","onClose","isEnded","offClose","titles","index","Math","floor","random","sendMeRankData","getRankData","module","exports"],"mappings":"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","file":"WX.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["const WX = {    // 微信平台\r\n    isWX: cc.sys.browserType == cc.sys.BROWSER_TYPE_WECHAT_GAME,\r\n\r\n    CONFIG: {\r\n        cloudDB: \"softmudmonster-77e1e9\",\r\n    },\r\n\r\n    hadInid: false,\r\n    rewardedVideoAd: null,\r\n    isVideoAvalible: false,\r\n\r\n    // 第一时间去用户标识\r\n    login(callback) {\r\n        console.log(\"WX-login\");\r\n        if(!this.isWX) return;\r\n\r\n        wx.onShareAppMessage(() => ({\r\n            title: '摘取红星，其利断金！',\r\n            imageUrl: 'https://ss0.baidu.com/73F1bjeh1BF3odCf/it/u=227293932,2206403720&fm=85&s=91AE46B263526DDA4E52527B03008074'\r\n          }))\r\n\r\n\r\n        let self = this;\r\n        wx.cloud.init({\r\n            env: self.CONFIG.cloudDB\r\n        });\r\n        self.DB = wx.cloud.database({\r\n            env: self.CONFIG.cloudDB\r\n        });\r\n        self.COLLECTION = self.DB.collection('test');\r\n\r\n        self.COLLECTION.add({\r\n            // data 字段表示需新增的 JSON 数据\r\n            data: {\r\n                // _id: 'todo-identifiant-aleatoire', // 可选自定义 _id，在此处场景下用数据库自动分配的就可以了\r\n                description: 'learn cloud database',\r\n                date: new Date().getTime(),\r\n                tags: [\r\n                    'cloud',\r\n                    'database'\r\n                ],\r\n            },\r\n            success(res) {\r\n                // res 是一个对象，其中有 _id 字段标记刚创建的记录的 id\r\n                console.log(res)\r\n            }\r\n        })\r\n\r\n        /*  开放数据域不能向主域发送消息。\r\n            主域可以向开放数据域发送消息。调用 wx.getOpenDataContext() 方法可以获取开放数据域实例，\r\n            调用实例上的 OpenDataContext.postMessage() 方法可以向开放数据域发送消息。 */\r\n        // self.openDataContext = wx.getOpenDataContext();\r\n        // self.createCanvas = wx.createCanvas;\r\n        // self.setUserCloudStorage = wx.setUserCloudStorage;\r\n\r\n\r\n\r\n        // 云函数\r\n        // wx.cloud.callFunction({\r\n        //     name: 'login',\r\n        //     data: {},\r\n        //     complete(e) {\r\n        //         self.openid = e.result.openId;\r\n        //         self.getUserData(callback);\r\n        //     }\r\n        // });\r\n\r\n\r\n\r\n\r\n\r\n        // if (!this.hadInid) {  // 分享初始化  \r\n        //     this.hadInid = true;\r\n        //     wx.showShareMenu({ withShareTicket: true });\r\n        //     wx.updateShareMenu({ withShareTicket: true });\r\n        //     wx.onShareAppMessage(() => {\r\n        //         return {\r\n        //             title: this.getShareTitle(),\r\n        //             imageUrl: this.getShareImgUrl(),\r\n        //         }\r\n        //     });\r\n        // }\r\n\r\n        // if (!this.rewardedVideoAd) {\r\n        //     this.rewardedVideoAd = wx.createRewardedVideoAd({ adUnitId: 'adunit-3a89cb6497099f0f' })\r\n        //     this.rewardedVideoAd.onLoad(() => {\r\n        //         this.isVideoAvailable = true;\r\n        //     });\r\n        //     this.rewardedVideoAd.onError(err => {\r\n        //         console.log(err)\r\n        //         this.isVideoAvailable = false;\r\n        //     })\r\n        // }\r\n    },\r\n\r\n\r\n    getUserData(callback) {\r\n        console.log(\"WX-getUserData\");\r\n        if(!this.isWX) return;\r\n        let self = this;\r\n        self.COLLECTION.where({\r\n            _openid: self.openid\r\n        }).get({\r\n            success(res) {\r\n                // 判断用户是否第一次加入游戏, 查询数据库中是否存在该用户的openId\r\n                if (res.data.length) {\r\n                    data = res.data[0];\r\n                } else {\r\n                    self.COLLECTION.add({\r\n                        data: {\r\n                            bestScore: 0,\r\n                            loginDays: 0,\r\n                            personCode: 0,\r\n                            playTime: 0,\r\n                            shareTimes: 0,\r\n                            totalScore: 0\r\n                        },\r\n                        success(res) {\r\n                            console.log(\"USER - getUserData: COLLECTION add - success: \");\r\n                            console.log(res);\r\n                        },\r\n                        fail: console.error\r\n                    });\r\n                }\r\n\r\n                self.DOC = self.COLLECTION.doc(data._id);  // 如果是微信平台，则要靠 _id 去定位\r\n                console.log(\"USER - getUserData: COLLECTION get - success: \" + self.DOC);\r\n                callback();\r\n            },\r\n            fail: console.error\r\n        });\r\n    },\r\n\r\n\r\n    // navigateToMiniProgram(appId, path) {\r\n    //     let envVersion = \"release\"; // develop || trial || release;\r\n    //     wx.navigateToMiniProgram({\r\n    //         appId,\t// string\t\t是\t要打开的小程序 appId\r\n    //         path,\t// string\t\t否\t打开的页面路径，如果为空则打开首页\r\n    //         // extraData:\t// object\t\t否\t需要传递给目标小程序的数据，目标小程序可在 App.onLaunch，App.onShow 中获取到这份数据。\r\n    //         envVersion, // string\trelease\t否\t要打开的小程序版本。仅在当前小程序为开发版或体验版时此参数有效。如果当前小程序是正式版，则打开的小程序必定是正式版。\r\n    //         success() { // function\t\t否\t接口调用成功的回调函数\r\n    //             console.log(\"跳转成功！\");\r\n    //         },\r\n    //         fail() { \t// function\t\t否\t接口调用失败的回调函数\r\n    //             console.log(\"跳转失败！\");\r\n    //         },\r\n    //         complete() { // function\t\t否\t接口调用结束的回调函数（调用成功、失败都会执行）\r\n    //             console.log(\"跳转操作完成！\");\r\n    //         }\r\n    //     });\r\n    // },\r\n\r\n    // updatePersonCode() {\r\n    //     let self = this;\r\n    //     self.DOC.update({\r\n    //         data: {\r\n    //             personCode: data.personCode\r\n    //         },\r\n    //         success: console.log,\r\n    //         fail: console.error\r\n    //     })\r\n    // },\r\n\r\n    // addShareTimes() {\r\n    //     let _ = this.DB.command;\r\n    //     this.DOC.update({\r\n    //         data: {\r\n    //             shareTimes: _.inc(1)\r\n    //         },\r\n    //         success: console.log,\r\n    //         fail: console.error\r\n    //     })\r\n    // },\r\n\r\n    updateThisPlay(playData) {  // 更新当场玩耍数据\r\n        console.log(\"GAMEOVER - Update User Data: \");\r\n        let _ = this.DB.command;\r\n        this.DOC.update({\r\n            data: {\r\n                playTime: _.inc(playData.thisPlayTime),\r\n                totalScore: _.inc(playData.score),\r\n                bestScore: data.bestScore,\r\n            },\r\n            success: console.log,\r\n            fail: console.error\r\n        });\r\n\r\n        this.saveRankData(data.bestScore);\r\n        console.log(data);\r\n    },\r\n\r\n    saveRankData(bestScore) {\r\n        let openData = [{\r\n            key: 'bestScore',\r\n            value: String(bestScore)\r\n        }];\r\n\r\n        wx.setUserCloudStorage({\r\n            KVDataList: openData,\r\n            success(res) {\r\n                console.log(\"saveOpenData success: \");\r\n                console.log(res);\r\n            },\r\n            fail(res) {\r\n                console.error(\"saveOpenData failed: \");\r\n                console.log(res);\r\n            }\r\n        });\r\n    },\r\n\r\n    share(callback, title) {\r\n        console.log(\"USER - wxShare \");\r\n        let self = this;\r\n\r\n        wx.shareAppMessage({\r\n            title: title ? title : this.getShareTitle(),\r\n            imageUrl: this.getShareImgUrl(),\r\n            success(res) {\r\n                console.log(res);\r\n                callback();\r\n                wx.showToast({ title: \"分享成功！\", icon: \"none\" });\r\n                self.addShareTimes();\r\n            },\r\n            fail(res) {\r\n                console.log(res);\r\n                wx.showToast({ title: \"分享失败！\", icon: \"none\" });\r\n            },\r\n        });\r\n    },\r\n\r\n    watchVideoAD(callback) {\r\n        console.log(\"USER-watchVideoAD\")\r\n        // let obj = wx.getSystemInfoSync();\r\n\r\n        if (this.isVideoAvailable) {\r\n            this.rewardedVideoAd.show();\r\n            let onClose = res => {\r\n                if (res) {\r\n                    if (callback) callback(res.isEnded);\r\n                }\r\n                this.rewardedVideoAd.offClose(onClose);\r\n                this.isVideoAvailable = false;\r\n            }\r\n\r\n            this.rewardedVideoAd.onClose(onClose);\r\n        }\r\n    },\r\n\r\n    getShareTitle() {\r\n        let titles = [\r\n            \"谁才是皇牌伐木工？\",\r\n            \" 一起来砍树吧！\",\r\n        ];\r\n        let index = Math.floor(Math.random() * titles.length);\r\n        return titles[index];\r\n    },\r\n    getShareImgUrl() {\r\n        // return `/imgs/timberman-3.6-1.jpg`;\r\n        return `https://gameres.huge7.com/timberman/share.jpg`;\r\n    },\r\n\r\n    sendMeRankData() {\r\n\r\n    },\r\n\r\n    // 排行榜功能： 获得好友在开放数据域的数据\r\n    getRankData() {\r\n\r\n    },\r\n}\r\n\r\nmodule.exports = WX;"]}