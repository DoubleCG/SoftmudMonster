{"version":3,"sources":["Game.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","scoreFXPrefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","scoreAudio","AudioClip","btnNode","gameOverNode","controlHintLabel","keyboardHint","multiline","touchHint","onLoad","groundY","y","height","currentStar","currentStarX","timer","starDuration","enabled","hintText","sys","isMobile","string","starPool","NodePool","scorePool","onStartGame","resetScore","x","active","getComponent","startMoveAt","spawnNewStar","newStar","size","get","instantiate","node","addChild","setPosition","getNewStarPosition","init","startTimer","despawnStar","star","destroy","Math","random","randY","jumpHeight","maxX","width","randX","v2","update","dt","gameOver","gainScore","pos","score","audioEngine","playEffect","spawnScoreFX","fx","stopMove","initProperties"],"mappings":"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","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 这个属性引用了星星预制资源\n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        scoreFXPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        // 星星产生后消失时间的随机范围\n        maxStarDuration: 0,\n        minStarDuration: 0,\n        // 地面节点，用于确定星星生成的高度\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\n        player: {\n            default: null,\n            type: cc.Node\n        },\n        // score label 的引用\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n\n        // 得分音效资源\n        scoreAudio: {\n            default: null,\n            type: cc.AudioClip\n        },\n\n        btnNode: {\n            default: null,\n            type: cc.Node\n        },\n        gameOverNode: {\n            default: null,\n            type: cc.Node\n        },\n        controlHintLabel: {\n            default: null,\n            type: cc.Label\n        },\n        keyboardHint: {\n            default: '',\n            multiline: true\n        },\n        touchHint: {\n            default: '',\n            multiline: true\n        },\n    },\n\n    onLoad: function () {\n        // 获取地平面的 y 轴坐标\n        this.groundY = this.ground.y + this.ground.height/2 - 10;\n\n        // store last star's x position\n        this.currentStar = null;\n        this.currentStarX = 0;\n\n        // 初始化计时器\n        this.timer = 0;\n        this.starDuration = 0;\n\n        // is showing menu or running game\n        this.enabled = false;\n\n        // initialize control hint\n        var hintText = cc.sys.isMobile ? this.touchHint : this.keyboardHint;\n        this.controlHintLabel.string = hintText;\n\n        // 生成一个新的星星\n        // this.spawnNewStar();\n        // 初始化计分\n        // this.score = 0;\n\n        // initialize star and score pool\n        this.starPool = new cc.NodePool('Star');\n        this.scorePool = new cc.NodePool('ScoreFX');\n    },\n\n    onStartGame: function () {\n        // 初始化计分\n        this.resetScore();\n        // set game state to running\n        this.enabled = true;\n        // set button and gameover text out of screen\n        this.btnNode.x = 3000;\n        this.gameOverNode.active = false;\n        // reset player position and move speed\n        this.player.getComponent('Player').startMoveAt(0,this.groundY);\n        // this.player.getComponent('Player').startMoveAt(0,0);\n        // spawn star\n        this.spawnNewStar();\n    },\n\n    spawnNewStar: function() {\n        var newStar = null;\n        // 使用给定的模板在场景中生成一个新节点\n        if (this.starPool.size() > 0) {\n            newStar = this.starPool.get(this); // this will be passed to Star's reuse method\n        } else {\n            newStar = cc.instantiate(this.starPrefab);\n        }\n        // var newStar = cc.instantiate(this.starPrefab);\n        \n        // 将新增的节点添加到 Canvas 节点下面\n        this.node.addChild(newStar);\n        // 为星星设置一个随机位置\n        newStar.setPosition(this.getNewStarPosition());\n        // pass Game instance to star\n        newStar.getComponent('Star').init(this);\n\n        // start star timer and store star reference\n        this.startTimer();\n        this.currentStar = newStar;\n\n        // 在星星组件上暂存 Game 对象的引用\n        // newStar.getComponent('Star').game = this;\n\n        // 重置计时器，根据消失时间范围随机取一个值\n        // this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\n        // this.timer = 0;\n    },\n\n    despawnStar (star) {\n        star.destroy();\n        this.spawnNewStar();\n    },\n\n    startTimer: function () {\n        // get a life duration for next star\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\n        this.timer = 0;\n    },\n\n    getNewStarPosition: function () {\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\n        var randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight;\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\n        var maxX = this.node.width/2;\n        var randX = (Math.random() - 0.5) * 2 * maxX;\n        // 返回星星坐标\n        return cc.v2(randX, randY);\n    },\n\n    update: function (dt) {\n        // 每帧更新计时器，超过限度还没有生成新的星星\n        // 就会调用游戏失败逻辑\n        if (this.timer > this.starDuration) {\n            this.gameOver();\n            this.enabled = false;   // disable gameOver logic to avoid load scene repeatedly\n            return;\n        }\n        this.timer += dt;\n    },\n\n    gainScore: function (pos) {\n        this.score += 1;\n        // 更新 scoreDisplay Label 的文字\n        this.scoreDisplay.string = 'Score: ' + this.score;\n       \n        // 播放特效\n        // var fx = this.spawnScoreFX();\n        // this.node.addChild(fx.node);\n        // fx.node.setPosition(pos);\n        // fx.play();\n        \n        // 播放得分音效\n        cc.audioEngine.playEffect(this.scoreAudio, false);\n    },\n    resetScore: function () {\n        this.score = 0;\n        this.scoreDisplay.string = 'Score: ' + this.score;\n    },\n\n    spawnScoreFX: function () {\n        var fx;\n        if (this.scorePool.size() > 0) {\n            fx = this.scorePool.get();\n            return fx.getComponent('ScoreFX');\n        } else {\n            fx = cc.instantiate(this.scoreFXPrefab).getComponent('ScoreFX');\n            fx.init(this);\n            return fx;\n        }\n    },\n\n    // gameOver: function () {\n    //     this.player.stopAllActions(); //停止 player 节点的跳跃动作\n    //     cc.director.loadScene('game');\n    // }\n\n    gameOver: function () {\n        this.gameOverNode.active = true;\n        // this.player.getComponent('Player').enabled = false;\n        this.player.getComponent('Player').stopMove();\n        this.player.getComponent('Player').initProperties();\n        this.currentStar.destroy();\n        this.btnNode.x = 0;\n    }\n});"]}