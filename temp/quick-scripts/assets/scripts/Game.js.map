{"version":3,"sources":["Game.js"],"names":["cc","Class","extends","Component","properties","gameCamera","default","type","Camera","starPrefab","Prefab","scoreFXPrefab","maxStarDuration","minStarDuration","gameLevel","ground","Node","player","scoreDisplay","Label","scoreAudio","AudioClip","btnNode","gameOverNode","controlHintLabel","keyboardHint","multiline","touchHint","onLoad","canvas","node","groundY","y","height","currentStar","currentStarX","timer","starDuration","enabled","hintText","sys","isMobile","string","starPool","NodePool","scorePool","onStartGame","resetScore","x","active","getComponent","startMoveAt","spawnNewStar","newStar","size","get","instantiate","addChild","setPosition","getNewStarPosition","init","startTimer","despawnStar","star","destroy","Math","random","randY","jumpHeight","maxX","width","randX","v2","gainScore","pos","score","fx","spawnScoreFX","play","audioEngine","playEffect","despawnScoreFX","scoreFX","put","gameUpgrade","modifyCamera","times","modify","setInterval","zoomRatio","clearInterval","bind","update","dt","gameOver","stopMove","initProperties"],"mappings":"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","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n        gameCamera:{\n            default:null,\n            type:cc.Camera\n        },\n\n        // 这个属性引用了星星预制资源\n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        scoreFXPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        // 星星产生后消失时间的随机范围\n        maxStarDuration: 5,\n        minStarDuration: 4,\n        gameLevel:0,\n        // 地面节点，用于确定星星生成的高度\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\n        player: {\n            default: null,\n            type: cc.Node\n        },\n        // score label 的引用\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n\n        // 得分音效资源\n        scoreAudio: {\n            default: null,\n            type: cc.AudioClip\n        },\n\n        btnNode: {\n            default: null,\n            type: cc.Node\n        },\n        gameOverNode: {\n            default: null,\n            type: cc.Node\n        },\n        controlHintLabel: {\n            default: null,\n            type: cc.Label\n        },\n        keyboardHint: {\n            default: '',\n            multiline: true\n        },\n        touchHint: {\n            default: '',\n            multiline: true\n        },\n    },\n\n    onLoad: function () {\n\n    \tlet canvas = this.node;\n    \t// canvas.width\n\n        // 获取地平面的 y 轴坐标\n        this.groundY = this.ground.y + this.ground.height/2 - 10;\n\n        // store last star's x position\n        this.currentStar = null;\n        this.currentStarX = 0;\n\n        // 初始化计时器\n        this.timer = 0;\n        this.starDuration = 0;\n\n        // is showing menu or running game\n        this.enabled = false;\n\n        // initialize control hint\n        var hintText = cc.sys.isMobile ? this.touchHint : this.keyboardHint;\n        this.controlHintLabel.string = hintText;\n\n        // initialize star and score pool\n        this.starPool = new cc.NodePool('Star');\n        this.scorePool = new cc.NodePool('ScoreFX');\n    },\n\n    onStartGame: function () {\n        // 初始化计分\n        this.resetScore();\n        // set game state to running\n        this.enabled = true;\n        // set button and gameover text out of screen\n        this.btnNode.x = 3000;\n        this.gameOverNode.active = false;\n        // reset player position and move speed\n        this.player.getComponent('Player').startMoveAt(0,this.groundY);\n        // spawn star\n        this.spawnNewStar();\n    },\n\n    spawnNewStar: function() {\n        var newStar = null;\n        // 使用给定的模板在场景中生成一个新节点\n        if (this.starPool.size() > 0) {\n            newStar = this.starPool.get(this); // this will be passed to Star's reuse method\n        } else {\n            newStar = cc.instantiate(this.starPrefab);\n        }\n        \n        // 将新增的节点添加到 Canvas 节点下面\n        this.node.addChild(newStar);\n        // 为星星设置一个随机位置\n        newStar.setPosition(this.getNewStarPosition());\n        // pass Game instance to star\n        newStar.getComponent('Star').init(this);\n\n        // start star timer and store star reference\n        this.startTimer();\n        this.currentStar = newStar;\n    },\n\n    despawnStar (star) {\n        star.destroy();\n        this.spawnNewStar();\n    },\n\n    startTimer: function () {\n        // get a life duration for next star\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\n        this.starDuration -= this.gameLevel / 100;\n        this.timer = 0;\n    },\n\n    getNewStarPosition: function () {\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\n        var randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight;\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\n        var maxX = this.node.width/2 + this.gameLevel;\n\n        var randX = (Math.random() - 0.5) * 2 * maxX;\n        // 返回星星坐标\n        return cc.v2(randX, randY);\n    },\n\n\n    gainScore: function (pos) {\n        this.score += 1;\n        // 更新 scoreDisplay Label 的文字\n        this.scoreDisplay.string = 'Score: ' + this.score;\n       \n        // 播放特效\n        var fx = this.spawnScoreFX();\n        this.node.addChild(fx.node);\n        fx.node.setPosition(pos);\n        fx.play();\n        \n        // 播放得分音效\n        cc.audioEngine.playEffect(this.scoreAudio, false);\n    },\n    resetScore: function () {\n        this.score = 0;\n        this.scoreDisplay.string = 'Score: ' + this.score;\n    },\n\n    spawnScoreFX: function () {\n        var fx;\n        if (this.scorePool.size() > 0) {\n            fx = this.scorePool.get();\n            return fx.getComponent('ScoreFX');\n        } else {\n            fx = cc.instantiate(this.scoreFXPrefab).getComponent('ScoreFX');\n            fx.init(this);\n            return fx;\n        }\n    },\n\n    despawnScoreFX (scoreFX) {\n        this.scorePool.put(scoreFX);\n    },\n\n    gameUpgrade:function(){\n        this.gameLevel++;\n        if(this.gameLevel%10 === 0){\n            this.modifyCamera();\n        }\n    },\n\n    // 设置镜头\n    modifyCamera:function(){\n        let times = 0;\n        let modify = setInterval(function(){\n            this.gameCamera.zoomRatio *= (999 / 1000);\n            times++;\n            if(times==10){\n                clearInterval(modify);\n            }\n        }.bind(this),25)\n    },\n\n    update: function (dt) {\n        // 每帧更新计时器，超过限度还没有生成新的星星\n        // 就会调用游戏失败逻辑\n        if (this.timer > this.starDuration) {\n            this.gameOver();\n            this.enabled = false;   // disable gameOver logic to avoid load scene repeatedly\n            return;\n        }\n        this.timer += dt;\n    },\n\n    gameOver: function () {\n        this.gameOverNode.active = true;\n        // this.player.getComponent('Player').enabled = false;\n        this.player.getComponent('Player').stopMove();\n        this.player.getComponent('Player').initProperties();\n        this.currentStar.destroy();\n        this.btnNode.x = 0;\n        this.gameLevel = 0;\n\t\tthis.gameCamera.zoomRatio = 1;\n    }\n});"]}