{"version":3,"sources":["Star.js"],"names":["cc","Class","extends","Component","properties","pickRadius","onLoad","enabled","init","game","node","opacity","reuse","onPicked","pos","getPosition","gainScore","despawnStar","player","getComponent","upgrade","gameUpgrade","getPlayerDistance","playerPos","y","height","dist","position","sub","mag","update","dt","opacityRatio","timer","starDuration","minOpacity","Math","floor"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,oBAAY;AAFJ,KAHP;;AAQLC,YAAQ,kBAAY;AAChB,aAAKC,OAAL,GAAe,KAAf;AACH,KAVI;;AAYL;AACAC,UAAM,cAAUC,IAAV,EAAgB;AAClB,aAAKA,IAAL,GAAYA,IAAZ;AACA,aAAKF,OAAL,GAAe,IAAf;AACA,aAAKG,IAAL,CAAUC,OAAV,GAAoB,GAApB;AACH,KAjBI;;AAmBLC,SAnBK,iBAmBEH,IAnBF,EAmBQ;AACT,aAAKD,IAAL,CAAUC,IAAV;AACH,KArBI;;;AAuBLI,cAAU,oBAAW;AACjB,YAAIC,MAAM,KAAKJ,IAAL,CAAUK,WAAV,EAAV;AACA;AACA,aAAKN,IAAL,CAAUO,SAAV,CAAoBF,GAApB;;AAEA;AACA,aAAKL,IAAL,CAAUQ,WAAV,CAAsB,KAAKP,IAA3B;;AAEA;AACA,aAAKD,IAAL,CAAUS,MAAV,CAAiBC,YAAjB,CAA8B,QAA9B,EAAwCC,OAAxC;;AAEA;AACA,aAAKX,IAAL,CAAUY,WAAV;AACH,KApCI;AAqCLC,uBAAmB,6BAAY;AAC3B;AACA,YAAIC,YAAY,KAAKd,IAAL,CAAUS,MAAV,CAAiBH,WAAjB,EAAhB;AACAQ,kBAAUC,CAAV,IAAe,KAAKd,IAAL,CAAUe,MAAV,GAAmB,CAAnB,GAAqB,CAApC;AACA;AACA,YAAIC,OAAO,KAAKhB,IAAL,CAAUiB,QAAV,CAAmBC,GAAnB,CAAuBL,SAAvB,EAAkCM,GAAlC,EAAX;AACA,eAAOH,IAAP;AACH,KA5CI;AA6CLI,YAAQ,gBAAUC,EAAV,EAAc;AAClB;AACA,YAAI,KAAKT,iBAAL,KAA2B,KAAKjB,UAApC,EAAgD;AAC5C;AACA,iBAAKQ,QAAL;AACA;AACH;;AAED;AACA,YAAImB,eAAe,IAAI,KAAKvB,IAAL,CAAUwB,KAAV,GAAgB,KAAKxB,IAAL,CAAUyB,YAAjD;AACA,YAAIC,aAAa,EAAjB;AACA,aAAKzB,IAAL,CAAUC,OAAV,GAAoBwB,aAAaC,KAAKC,KAAL,CAAWL,gBAAgB,MAAMG,UAAtB,CAAX,CAAjC;AACH;AAzDI,CAAT","file":"Star.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["cc.Class({\n    extends: cc.Component,\n    \n    properties: {\n        // 星星和主角之间的距离小于这个数值时，就会完成收集\n        pickRadius: 70,\n    },\n\n    onLoad: function () {\n        this.enabled = false;\n    },\n\n    // use this for initialization\n    init: function (game) {\n        this.game = game;\n        this.enabled = true;\n        this.node.opacity = 255;\n    },\n\n    reuse (game) {\n        this.init(game);\n    },\n\n    onPicked: function() {\n        var pos = this.node.getPosition();\n        // 调用 Game 脚本的得分方法\n        this.game.gainScore(pos);\n        \n        // 当星星被收集时，调用 Game 脚本中的接口，销毁当前星星节点\n        this.game.despawnStar(this.node);\n        \n        // 角色升级\n        this.game.player.getComponent('Player').upgrade();\n        \n        // 游戏升级\n        this.game.gameUpgrade();\n    },\n    getPlayerDistance: function () {\n        // 根据 player 节点位置判断距离\n        var playerPos = this.game.player.getPosition();\n        playerPos.y += this.node.height * 1/2;\n        // 根据两点位置计算两点之间距离\n        var dist = this.node.position.sub(playerPos).mag();\n        return dist;\n    },\n    update: function (dt) {\n        // 每帧判断和主角之间的距离是否小于收集距离\n        if (this.getPlayerDistance() < this.pickRadius) {\n            // 调用收集行为\n            this.onPicked();\n            return;\n        }\n        \n        // 根据 Game 脚本中的计时器更新星星的透明度\n        var opacityRatio = 1 - this.game.timer/this.game.starDuration;\n        var minOpacity = 50;\n        this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\n    },\n});\n"]}